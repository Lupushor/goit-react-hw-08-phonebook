{"version":3,"file":"static/js/914.2d41a18a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Filter/Filter.styled.js","components/LoginForm/LoginForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n  Field as FormikField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  padding-top: 80px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: red;\n`;\n\nexport const Field = styled(FormikField)`\n  @media screen and (min-width: 320px) {\n    min-width: 220px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  @media screen and (min-width: 320px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  min-width: 300px;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  @media screen and (min-width: 320px) {\n    padding: 5px;\n\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px;\n\n    font-size: 16px;\n  }\n\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: #2196f3;\n  color: #ffffff;\n\n  border-radius: 4px;\n  border: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const AdditionalFormFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  @media screen and (min-width: 320px) {\n    min-width: 225px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  margin-bottom: 15px;\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  @media screen and (min-width: 320px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 130px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const AdditionalLoginRegisterFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  ErrorMessage,\n  Field,\n  Button,\n  Label,\n  AdditionalFormFiled,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { CgAdd, CgPhone, CgUser } from 'react-icons/cg';\n\nconst InputSchema = Yup.object().shape({\n  name: Yup.string().required('Must be required'),\n  number: Yup.string().required('Must be required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isDublicate = ({ name, number }) => {\n    const refName = name.toLowerCase().trim();\n    const refNumber = number.trim();\n\n    const dublicate = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === refName || contact.number === refNumber\n    );\n    return Boolean(dublicate);\n  };\n\n  const onAddContact = ({ name, number }) => {\n    if (isDublicate({ name, number })) {\n      return alert(`${name} or ${number} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={InputSchema}\n      onSubmit={(values, { resetForm }) => {\n        onAddContact({ ...values });\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          <AdditionalFormFiled>\n            <CgUser size=\"18\" />\n            Name\n          </AdditionalFormFiled>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            autoComplete=\"off\"\n            required\n          />\n        </Label>\n\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <Label>\n          <AdditionalFormFiled>\n            <CgPhone size=\"18\" />\n            Number\n          </AdditionalFormFiled>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            autoComplete=\"off\"\n            required\n          />\n        </Label>\n\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <Button type=\"submit\">\n          Add contact\n          <CgAdd\n            size=\"18\"\n            style={{\n              fill: 'white',\n              verticalAlign: 'middle',\n              marginLeft: '5px',\n            }}\n          />\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import {\n  AdditionalField,\n  Button,\n  Contact,\n} from 'components/ContactList/ContactList.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { CgTrash, CgUser, CgPhone, CgEditMarkup } from 'react-icons/cg';\nimport { ListItem, Name, Number } from './ContactList.styled';\n\nexport const ContactList = ({ isOpenModal }) => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              <Contact>\n                <Name>\n                  <CgUser size=\"18\" />\n                  {name}\n                </Name>\n                <Number>\n                  <CgPhone size=\"18\" />\n                  {number}\n                </Number>\n              </Contact>\n              <AdditionalField>\n                <Button\n                  disabled={isLoading}\n                  type=\"button\"\n                  onClick={() => isOpenModal(name, number, id)}\n                >\n                  <CgEditMarkup size=\"18\" />\n                </Button>\n                <Button\n                  disabled={isLoading}\n                  type=\"button\"\n                  onClick={() => handleDelete(id)}\n                >\n                  <CgTrash size=\"18\" />\n                </Button>\n              </AdditionalField>\n            </ListItem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n\n  padding: 20px;\n`;\n\nexport const Modal = styled.div`\n  @media screen and (min-width: 320px) {\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  position: relative;\n\n  border-radius: 10px;\n\n  background-image: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    ),\n    url(https://st.depositphotos.com/3322093/4547/i/950/depositphotos_45475147-stock-photo-yellow-pages-phone-book.jpg);\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n\n  max-width: 100%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  @media screen and (min-width: 320px) {\n    font-size: 14px;\n\n    min-width: 205px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n\n    min-width: 300px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  color: white;\n`;\n\nexport const BtnClose = styled.button`\n  cursor: pointer;\n\n  margin: 0;\n\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  color: white;\n  background-color: transparent;\n\n  border: none;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #188ce8;\n  }\n`;\n","import { Input } from 'components/Filter/Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { AdditionalLoginRegisterFiled } from 'components/LoginForm/LoginForm.styled';\nimport { CgUser, CgPhone, CgCloseO } from 'react-icons/cg';\nimport { Button } from 'components/ContactList/ContactList.styled';\nimport { editContact } from 'redux/contacts/operations';\nimport { useEffect, useState } from 'react';\nimport { BtnClose, Form, Label, Modal, Overlay } from './EditForm.styled';\n\nexport const EditForm = ({ contactId, name, number, isCloseModal }) => {\n  const dispatch = useDispatch();\n  const [userName, setUserName] = useState(name);\n  const [userNumber, setUserNumber] = useState(number);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'number' ? setUserNumber(value) : setUserName(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(editContact({ contactId, userName, userNumber }));\n\n    isCloseModal();\n  };\n\n  useEffect(() => {\n    const handleClose = e => {\n      if (e.key === 'Escape') {\n        isCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleClose);\n\n    return () => window.removeEventListener('keydown', handleClose);\n  }, [isCloseModal]);\n\n  const handleCloseBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      isCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleCloseBackdrop}>\n      <Modal>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <AdditionalLoginRegisterFiled>\n              <CgUser size=\"18\" />\n              Name\n            </AdditionalLoginRegisterFiled>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder={name}\n              value={userName}\n              onChange={handleChange}\n              title=\"Field can't be empty\"\n              autoComplete=\"off\"\n              required\n            />\n          </Label>\n          <Label>\n            <AdditionalLoginRegisterFiled>\n              <CgPhone size=\"18\" />\n              Number\n            </AdditionalLoginRegisterFiled>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder={number}\n              value={userNumber}\n              onChange={handleChange}\n              title=\"Field can't be empty\"\n              autoComplete=\"off\"\n              required\n            />\n          </Label>\n          <BtnClose type=\"button\" onClick={isCloseModal}>\n            <CgCloseO size=\"18\" />\n          </BtnClose>\n          <Button type=\"submit\">Edit</Button>\n        </Form>\n      </Modal>\n    </Overlay>\n  );\n};\n","import { Text } from 'components/ContactList/ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    const filterText = e.target.value.trim();\n    dispatch(setFilter(filterText));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const getFilteredContacts = useSelector(selectFilteredContacts);\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const [contactId, setContactId] = useState('');\n  const [isModal, setIsModal] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOpenModal = (name, number, id) => {\n    setIsModal(true);\n    setUserName(name);\n    setUserNumber(number);\n    setContactId(id);\n  };\n\n  const isCloseModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <>\n      <Helmet>Contacts</Helmet>\n      <ContactForm />\n\n      {isLoading && <Loader />}\n\n      {contacts.length !== 0 && (\n        <div>\n          <Filter />\n          {getFilteredContacts.length !== 0 && (\n            <ContactList isOpenModal={isOpenModal} />\n          )}\n        </div>\n      )}\n\n      {error && <b style={{ color: 'red' }}>{error}</b>}\n\n      {isModal && (\n        <EditForm\n          name={userName}\n          number={userNumber}\n          contactId={contactId}\n          isCloseModal={isCloseModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","ErrorMessage","FormikErrorMessage","_templateObject2","Field","FormikField","_templateObject3","Label","label","_templateObject4","Button","button","_templateObject5","AdditionalFormFiled","div","_templateObject6","Input","input","form","AdditionalLoginRegisterFiled","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","InputSchema","Yup","shape","required","number","ContactForm","dispatch","useDispatch","useSelector","onAddContact","_ref2","refName","trim","refNumber","dublicate","find","contact","Boolean","isDublicate","alert","concat","addContact","_jsx","Formik","initialValues","validationSchema","onSubmit","values","_ref3","resetForm","_objectSpread","children","_jsxs","CgUser","size","type","pattern","title","autoComplete","component","CgPhone","CgAdd","style","fill","verticalAlign","marginLeft","ContactList","isOpenModal","filteredContacts","useEffect","fetchContacts","_Fragment","map","id","ListItem","Contact","Name","Number","AdditionalField","disabled","onClick","CgEditMarkup","contactId","deleteContact","CgTrash","Overlay","Modal","BtnClose","EditForm","isCloseModal","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","userNumber","setUserNumber","handleChange","e","_e$currentTarget","currentTarget","value","handleClose","key","window","addEventListener","removeEventListener","target","preventDefault","editContact","placeholder","onChange","CgCloseO","Filter","Text","filterText","setFilter","getFilteredContacts","_useState5","_useState6","setContactId","_useState7","_useState8","isModal","setIsModal","Helmet","Loader","length","color"],"sourceRoot":""}