{"version":3,"file":"static/js/665.a5b34bf4.chunk.js","mappings":"mVAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mHAQzBC,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAA0BM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yBAIzCI,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAmBS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2hBA+B3BO,EAAQV,EAAAA,GAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yPAgBpBU,EAASb,EAAAA,GAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6iBAkCtBa,EAAsBhB,EAAAA,GAAOiB,IAAGC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gE,yGClGhCO,EAAQV,EAAAA,GAAOW,MAAKT,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOpBgB,EAAQnB,EAAAA,GAAOoB,MAAKd,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,ojB,yGCPpBJ,EAAOC,EAAAA,GAAOqB,KAAInB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gPAelBmB,EAA+BtB,EAAAA,GAAOiB,IAAGX,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iE,uJCNzCoB,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACEC,EAAAA,EAAAA,MAAC3B,EAAAA,EAAI,CAAC4B,SAfa,SAAAC,GACnBA,EAAEC,iBACF,IAAMR,EAAOO,EAAEE,cAEfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMX,EAAKY,SAASD,KAAKE,MACzBC,MAAOd,EAAKY,SAASE,MAAMD,MAC3BE,SAAUf,EAAKY,SAASG,SAASF,SAGrCb,EAAKgB,OACP,EAG+BC,SAAA,EAC3BZ,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAA4B,SAAA,EACJZ,EAAAA,EAAAA,MAACJ,EAAAA,EAA4B,CAAAgB,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,IAAgB,CAACC,KAAK,OAAO,WAGhCF,EAAAA,EAAAA,KAACpB,EAAAA,EAAK,CACJuB,KAAK,OACLV,KAAK,OACLW,MAAM,qBACNC,aAAa,MACbC,UAAQ,QAGZnB,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAA4B,SAAA,EACJZ,EAAAA,EAAAA,MAACJ,EAAAA,EAA4B,CAAAgB,SAAA,EAC3BC,EAAAA,EAAAA,KAACO,EAAAA,IAAY,CAACL,KAAK,OAAO,YAG5BF,EAAAA,EAAAA,KAACpB,EAAAA,EAAK,CACJuB,KAAK,QACLV,KAAK,QACLW,MAAM,qBACNC,aAAa,MACbC,UAAQ,QAGZnB,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAA4B,SAAA,EACJZ,EAAAA,EAAAA,MAACJ,EAAAA,EAA4B,CAAAgB,SAAA,EAC3BC,EAAAA,EAAAA,KAACQ,EAAAA,IAAK,CAACN,KAAK,OAAO,eAGrBF,EAAAA,EAAAA,KAACpB,EAAAA,EAAK,CACJuB,KAAK,WACLV,KAAK,WACLgB,QAAQ,QACRL,MAAM,kDACNC,aAAa,MACbC,UAAQ,QAGZN,EAAAA,EAAAA,KAAC1B,EAAAA,GAAM,CAAC6B,KAAK,SAAQJ,SAAC,eAG5B,E,UC3DA,EAXqB,WACnB,OACEZ,EAAAA,EAAAA,MAAA,OAAAY,SAAA,EACEC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAAAX,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAAChB,EAAY,MAGnB,C","sources":["components/ContactForm/ContactForm.styled.js","components/Filter/Filter.styled.js","components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n  Field as FormikField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  padding-top: 80px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: red;\n`;\n\nexport const Field = styled(FormikField)`\n  @media screen and (min-width: 320px) {\n    min-width: 220px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  @media screen and (min-width: 320px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  min-width: 300px;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  @media screen and (min-width: 320px) {\n    padding: 5px;\n\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px;\n\n    font-size: 16px;\n  }\n\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: #2196f3;\n  color: #ffffff;\n\n  border-radius: 4px;\n  border: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const AdditionalFormFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  @media screen and (min-width: 320px) {\n    min-width: 225px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  margin-bottom: 15px;\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  @media screen and (min-width: 320px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 130px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const AdditionalLoginRegisterFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import { Button, Label } from 'components/ContactForm/ContactForm.styled';\nimport { Input } from 'components/Filter/Filter.styled';\nimport {\n  AdditionalLoginRegisterFiled,\n  Form,\n} from 'components/LoginForm/LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { BsEnvelopeAt, BsKey } from 'react-icons/bs';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <AdditionalLoginRegisterFiled>\n          <AiOutlineUserAdd size=\"18\" />\n          Name\n        </AdditionalLoginRegisterFiled>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Fill in this field\"\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Label>\n        <AdditionalLoginRegisterFiled>\n          <BsEnvelopeAt size=\"18\" />\n          Email\n        </AdditionalLoginRegisterFiled>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          title=\"Fill in this field\"\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Label>\n        <AdditionalLoginRegisterFiled>\n          <BsKey size=\"18\" />\n          Password\n        </AdditionalLoginRegisterFiled>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          pattern=\".{7,}\"\n          title=\"The password must contain at least 7 characters\"\n          autoComplete=\"off\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","ErrorMessage","FormikErrorMessage","_templateObject2","Field","FormikField","_templateObject3","Label","label","_templateObject4","Button","button","_templateObject5","AdditionalFormFiled","div","_templateObject6","Input","input","form","AdditionalLoginRegisterFiled","RegisterForm","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","currentTarget","register","name","elements","value","email","password","reset","children","_jsx","AiOutlineUserAdd","size","type","title","autoComplete","required","BsEnvelopeAt","BsKey","pattern","Helmet"],"sourceRoot":""}